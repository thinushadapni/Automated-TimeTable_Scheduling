# Generated by Django 5.1.7 on 2025-05-06 16:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('course_id', models.CharField(default=1, max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('course_type', models.CharField(blank=True, choices=[('tt', 'TT Course'), ('dept', 'Department Course'), ('none', 'None')], default='', max_length=10, null=True)),
                ('hours_per_week', models.IntegerField(default=0)),
                ('offered_to', models.CharField(blank=True, default='', max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faculty',
            fields=[
                ('faculty_id', models.CharField(default=1, max_length=20, primary_key=True, serialize=False)),
                ('faculty_name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('stud_id', models.CharField(default=1, max_length=20, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('TT_Coordinator', 'TT Coordinator'), ('Department_Coordinator', 'Department Coordinator'), ('faculty', 'Faculty'), ('student', 'Student')], default='TT_Coordinator', max_length=30)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('main_id', models.AutoField(primary_key=True, serialize=False)),
                ('section_id', models.CharField(blank=True, max_length=50, null=True)),
                ('academic_year', models.CharField(max_length=10)),
                ('semester', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], max_length=10)),
                ('dept', models.CharField(blank=True, max_length=10, null=True)),
                ('venue', models.CharField(blank=True, max_length=100, null=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.course')),
                ('faculty', models.ManyToManyField(related_name='classes', to='timetable_app.faculty')),
            ],
            options={
                'unique_together': {('course', 'section_id', 'academic_year', 'semester', 'dept')},
            },
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.class')),
                ('stud_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.student')),
            ],
        ),
        migrations.CreateModel(
            name='TimetableStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('tt_coordinator', 'TT Coordinator Assigning'), ('dept_coordinator', 'Department Coordinator Assigning'), ('ga_running', 'Genetic Algorithm Running'), ('completed', 'Finalized')], default='tt_coordinator', max_length=20)),
                ('academic_year', models.CharField(default='none', max_length=10)),
                ('semester', models.CharField(choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8')], default='none', max_length=10)),
                ('section', models.CharField(default='none', max_length=2)),
                ('dept', models.CharField(default='', max_length=10)),
            ],
            options={
                'unique_together': {('academic_year', 'semester', 'section', 'dept')},
            },
        ),
        migrations.CreateModel(
            name='Timetable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day', models.IntegerField(choices=[(1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday')])),
                ('slot', models.IntegerField(choices=[(1, '9:00 AM - 9:50 AM'), (2, '9:50 AM - 10:40 AM'), (3, '11:00 AM - 11:50 AM'), (4, '11:50 PM - 12:40 PM'), (5, '1:30 PM - 2:15 PM'), (6, '2:15 PM - 3:00 PM'), (7, '3:15 PM - 4:00 PM'), (8, '4:00 PM - 4:45 PM')])),
                ('main_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='timetable_app.class')),
            ],
            options={
                'unique_together': {('main_id', 'day', 'slot')},
            },
        ),
    ]
